{"version":3,"sources":["../src/endpoints.js"],"names":["express","require","data","schema","global","XMLHttpRequest","multer","upload","router","Router","use","timeLog","req","res","next","console","log","Date","toUTCString","verifyNull","snapshot","resHandler","snapshotVal","val","send","RequestError","response","post","id","project","Project","body","database","ref","set","JSON","parse","stringify","projectId","RequestSuccess","get","projectsRef","once","params","remove","then","patch","track","TrackData","createMP3","storageRef","databaseRef","responseHandler","requestFile","put","Uint8Array","buffer","metadata","contentType","updateMetadata","getDownloadURL","url","sampleMeta","filename","originalname","type","path","fullPath","downloadURL","single","storage","child","dataref","file","sampleId","requestId","msg","Message","counterRef","msgId","parseInt","messagesRef","setId","setTimestamp","messageId","text","module","exports"],"mappings":"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","sourcesContent":["// UUID generator library that generates random ids\nimport { v4 as uuidv4 } from \"uuid\";\n\n// express\nconst express = require(\"express\");\n// firebase\nconst data = require(\"./database\");\n// schema objects\nconst schema = require(\"./schema\");\n// firebase web patch library\nglobal.XMLHttpRequest = require(\"xhr2\");\n// library to handle file streaming in express\nconst multer = require(\"multer\");\nconst upload = multer();\n\n// create express router to handle endpoints\nconst router = express.Router();\n\n// create middleware that logs the timestamp when request is received\nrouter.use(function timeLog(req, res, next) {\n  console.log(\"Request Received - Time: \", new Date(new Date().toUTCString()));\n  next();\n});\n\n// function that checks if a realtime database reference has no contents, and if so, returns an error. if it doesn't, it returns the value\nfunction verifyNull(snapshot, resHandler) {\n  let snapshotVal = snapshot.val();\n  if (snapshotVal === null) {\n    return resHandler.send(schema.RequestError(404, \"no data available\"));\n  } else {\n    const response = snapshotVal;\n    return resHandler.send(response);\n  }\n}\n\n// PROJECTS ----------------------------------------------\n\n// create a project. the request body mirrors the Project object\nrouter.post(\"/projects/\", (req, res) => {\n  const id = uuidv4();\n  let project = new schema.Project(req.body);\n  data.database.ref(\"projects/\" + id).set(JSON.parse(JSON.stringify(project)));\n  const response = {\n    projectId: id,\n  };\n  return res.send(\n    schema.RequestSuccess(201, \"project created successfully\", response)\n  );\n});\n\n// get a list of all projects\nrouter.get(\"/projects/\", (req, res) => {\n  const projectsRef = data.database.ref(\"projects\");\n  projectsRef.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// get a specific project by its UUID\nrouter.get(\"/project/:projectId\", (req, res) => {\n  const projectsRef = data.database.ref(`projects/${req.params.projectId}`);\n  projectsRef.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// delete a specific project by its UUID\nrouter.delete(\"/project/:projectId\", (req, res) => {\n  const projectsRef = data.database.ref(`projects/${req.params.projectId}`);\n  projectsRef.once(\"value\", (snapshot) => {\n    if (snapshot.val() === null) {\n      res.send(\n        schema.RequestError(\n          404,\n          \"delete failed: project with provided id does not exist\"\n        )\n      );\n    } else {\n      projectsRef.remove().then(function () {\n        res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n      });\n    }\n  });\n});\n\n// get a list of contributors by the project's UUID\nrouter.get(\"/project/:projectId/contributors/\", (req, res) => {\n  const ref = data.database.ref(\n    `projects/${req.params.projectId}/contributors/`\n  );\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// update the music track in the project with a patch request. the request body mirrors the TrackData object\nrouter.patch(\"/project/:projectId/track/\", (req, res) => {\n  let track = new schema.TrackData(req.body);\n  data.database\n    .ref(`projects/${req.params.projectId}/trackdata`)\n    .set(JSON.parse(JSON.stringify(track)));\n  const response = {\n    projectId: req.params.projectId,\n  };\n  return res.send(\n    schema.RequestSuccess(200, \"track updated successfully\", response)\n  );\n});\n\n// update the project as a whole with a patch request. the request body mirrors the Project object\nrouter.patch(\"/project/:projectId/\", (req, res) => {\n  let project = new schema.Project(req.body);\n  data.database\n    .ref(`projects/${req.params.projectId}`)\n    .set(JSON.parse(JSON.stringify(project)));\n  const response = {\n    projectId: req.params.projectId,\n  };\n  return res.send(\n    schema.RequestSuccess(200, \"project patched successfully\", response)\n  );\n});\n\n// SAMPLES -------------------------------------------------\n\n/*\n\nTODO:\n\nwhen sending an mp3 file of a sample to the backend, remember to set the header 'enctype' to 'multipart/form-data'\n\nto test the upload of a file, use the below curl command:\ncurl -X POST -F 'sample=@<absolute file location>' http://localhost:4000/project/<project id>/samples/\n\n*/\n\n// helper function for creating a sample. the function adds the mp3 file to firebase storage, and creates a realtime database entry on the sample details\nfunction createMP3(storageRef, databaseRef, id, responseHandler, requestFile) {\n  storageRef.put(new Uint8Array(requestFile.buffer)).then((snapshot) => {\n    const metadata = {\n      contentType: \"audio/mpeg\",\n    };\n    storageRef.updateMetadata(metadata).then((metadata) => {\n      storageRef.getDownloadURL().then((url) => {\n        const sampleMeta = {\n          filename: requestFile.originalname,\n          id: id,\n          type: \"audio/mpeg\",\n          path: storageRef.fullPath,\n          downloadURL: url,\n        };\n        databaseRef.set(sampleMeta);\n        return responseHandler.send(\n          schema.RequestSuccess(200, \"saved successfully\", {\n            id: id,\n          })\n        );\n      });\n    });\n  });\n}\n\n// create a new universal sample. this endpoint accepts an mp3 file as input in the request, and passes it off to the helper function above\nrouter.post(\"/samples/\", upload.single(\"sample\"), (req, res) => {\n  const id = uuidv4();\n  const ref = data.storage.ref().child(\"samples\").child(\"universal\").child(id);\n  const dataref = data.database.ref(`samples/universal/${id}`);\n  return createMP3(ref, dataref, id, res, req.file);\n});\n\n// gets a list of universal samples by querying the realtime database entries\nrouter.get(\"/samples/\", (req, res) => {\n  const ref = data.database.ref(`samples/universal/`);\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// create a new project-specific sample. this endpoint accepts an mp3 file as input in the request, and passes it off to the helper function above\nrouter.post(\n  \"/project/:projectId/samples/\",\n  upload.single(\"sample\"),\n  (req, res) => {\n    const id = uuidv4();\n    const ref = data.storage\n      .ref()\n      .child(\"samples\")\n      .child(req.params.projectId)\n      .child(id);\n    const dataref = data.database.ref(`samples/${req.params.projectId}/${id}`);\n    return createMP3(ref, dataref, id, res, req.file);\n  }\n);\n\n// gets a list of project-specific samples by querying the realtime database entries\nrouter.get(\"/project/:projectId/samples/\", (req, res) => {\n  const ref = data.database.ref(`samples/${req.params.projectId}`);\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// get a specific project sample entry by providing the project id and the sample id\nrouter.get(\"/project/:projectId/sample/:sampleId/\", (req, res) => {\n  const ref = data.database.ref(\n    `samples/${req.params.projectId}/${req.params.sampleId}`\n  );\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// update a specific project sample by project id and sample id. since firebase storage files cannot be \"updated\", this endpoint deletes it and recreates it with the same id\nrouter.patch(\n  \"/project/:projectId/sample/:sampleId/\",\n  upload.single(\"sample\"),\n  (req, res) => {\n    const storageRef = data.storage\n      .ref()\n      .child(\"samples\")\n      .child(req.params.projectId)\n      .child(req.params.sampleId);\n    const databaseRef = data.database.ref(\n      `samples/${req.params.projectId}/${req.params.sampleId}`\n    );\n    storageRef.delete().then(() => {\n      databaseRef.remove().then(() => {\n        res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n      });\n    });\n    createMP3(storageRef, databaseRef, req.params.sampleId, res, req.file);\n  }\n);\n\n// delete a specific project sample by project id and sample id\nrouter.delete(\"/project/:projectId/sample/:sampleId/\", (req, res) => {\n  const storageRef = data.storage\n    .ref()\n    .child(\"samples\")\n    .child(req.params.projectId)\n    .child(req.params.sampleId);\n  const databaseRef = data.database.ref(\n    `samples/${req.params.projectId}/${req.params.sampleId}`\n  );\n\n  storageRef.delete().then(() => {\n    databaseRef.remove().then(() => {\n      res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n    });\n  });\n});\n\n// SOUND EFFECTS --------------------------------------------\n\n// create a new universal effect. this endpoint accepts an mp3 file as input in the request, and passes it off to the helper function above\nrouter.post(\"/effects/\", upload.single(\"effect\"), (req, res) => {\n  const id = uuidv4();\n  const ref = data.storage.ref().child(\"effects\").child(\"universal\").child(id);\n  const dataref = data.database.ref(`effects/universal/${id}`);\n  return createMP3(ref, dataref, id, res, req.file);\n});\n\n// gets a list of universal effects by querying the realtime database entries\nrouter.get(\"/effects/\", (req, res) => {\n  const ref = data.database.ref(`effects/universal/`);\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// gets a list of project-specific effects by querying the realtime database entries\nrouter.get(\"/project/:projectId/effects/\", (req, res) => {\n  const ref = data.database.ref(`effects/${req.params.projectId}`);\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// create a new project-specific effect. this endpoint accepts an mp3 file as input in the request, and passes it off to the helper function above\nrouter.post(\n  \"/project/:projectId/effects/\",\n  upload.single(\"effect\"),\n  (req, res) => {\n    const id = uuidv4();\n    const ref = data.storage\n      .ref()\n      .child(\"effects\")\n      .child(req.params.projectId)\n      .child(id);\n    const dataref = data.database.ref(`effects/${req.params.projectId}/${id}`);\n    return createMP3(ref, dataref, id, res, req.file);\n  }\n);\n\n// get a specific project effect entry by providing the project id and the effect id\nrouter.get(\"/project/:projectId/effects/:effectId/\", (req, res) => {\n  const ref = data.database.ref(\n    `effects/${req.params.projectId}/${req.params.sampleId}`\n  );\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// update a specific project effect by project id and effect id. since firebase storage files cannot be \"updated\", this endpoint deletes it and recreates it with the same id\nrouter.patch(\n  \"/project/:projectId/effects/:effectId/\",\n  upload.single(\"effect\"),\n  (req, res) => {\n    const storageRef = data.storage\n      .ref()\n      .child(\"effects\")\n      .child(req.params.projectId)\n      .child(req.params.sampleId);\n    const databaseRef = data.database.ref(\n      `effects/${req.params.projectId}/${req.params.sampleId}`\n    );\n    storageRef.delete().then(() => {\n      databaseRef.remove().then(() => {\n        res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n      });\n    });\n    createMP3(storageRef, databaseRef, req.params.sampleId, res, req.file);\n  }\n);\n\n// delete a specific project effect by project id and effect id\nrouter.delete(\"/project/:projectId/effects/:effectId/\", (req, res) => {\n  const storageRef = data.storage\n    .ref()\n    .child(\"effects\")\n    .child(req.params.projectId)\n    .child(req.params.sampleId);\n  const databaseRef = data.database.ref(\n    `effects/${req.params.projectId}/${req.params.sampleId}`\n  );\n\n  storageRef.delete().then(() => {\n    databaseRef.remove().then(() => {\n      res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n    });\n  });\n});\n\n// PLAY REQUESTS ------------------------------------------\n\nrouter.post(\"/project/:projectId/request/\", (req, res) => {\n  return res.send(`POST Play Request: ${req.params.projectId}`);\n});\n\nrouter.get(\"/project/:projectId/request/\", (req, res) => {\n  return res.send(`GET All Play Requests: ${req.params.projectId}`);\n});\n\nrouter.delete(\"/project/:projectId/request/:requestId/\", (req, res) => {\n  return res.send(\n    `DEL Project ID: ${req.params.projectId}, Request ID: ${req.params.requestId}`\n  );\n});\n\nrouter.post(\"/project/:projectId/request/:requestId/approve/\", (req, res) => {\n  return res.send(\n    `POST Approve Request - Project ID: ${req.params.projectId}, Request ID: ${req.params.requestId}`\n  );\n});\n\nrouter.post(\"/project/:projectId/request/:requestId/deny/\", (req, res) => {\n  return res.send(\n    `POST Deny Request - Project ID: ${req.params.projectId}, Request ID: ${req.params.requestId}`\n  );\n});\n\nrouter.post(\"/project/:projectId/request/:requestId/change/\", (req, res) => {\n  return res.send(\n    `POST Change Request - Project ID: ${req.params.projectId}, Request ID: ${req.params.requestId}`\n  );\n});\n\n// MESSAGING ---------------------------------------------------\n\n// get all project-specific messages sent by users\nrouter.get(\"/project/:projectId/messages/\", (req, res) => {\n  const ref = data.database.ref(`messages/${req.params.projectId}/messages`);\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// create a new message with properties mirroring Message object: text, senders, timestamp, id\nrouter.post(\"/project/:projectId/messages/\", (req, res) => {\n  const msg = new schema.Message(req.body);\n  const counterRef = data.database.ref(\n    `messages/${req.params.projectId}/currentMessageId`\n  );\n  counterRef.once(\"value\", (snapshot) => {\n    let msgId = 1;\n    if (snapshot.val() === null) {\n      counterRef.set(msgId);\n    } else {\n      msgId = parseInt(snapshot.val());\n      msgId += 1;\n      counterRef.set(msgId);\n    }\n    const messagesRef = data.database.ref(\n      `messages/${req.params.projectId}/messages/${msgId}`\n    );\n    msg.setId(msgId);\n    msg.setTimestamp(new Date(new Date().toUTCString()));\n    messagesRef.set(JSON.parse(JSON.stringify(msg))).then(() => {\n      res.send(\n        schema.RequestSuccess(200, \"created successfully\", {\n          id: msgId,\n        })\n      );\n    });\n  });\n});\n\n// get a specific message by its id\nrouter.get(\"/project/:projectId/messages/:messageId/\", (req, res) => {\n  const ref = data.database.ref(\n    `messages/${req.params.projectId}/messages/${req.params.messageId}`\n  );\n  ref.once(\"value\", (snapshot) => {\n    return verifyNull(snapshot, res);\n  });\n});\n\n// delete a specific message by its id\nrouter.delete(\"/project/:projectId/messages/:messageId/\", (req, res) => {\n  const ref = data.database.ref(\n    `messages/${req.params.projectId}/messages/${req.params.messageId}`\n  );\n  ref.once(\"value\", (snapshot) => {\n    if (snapshot.val() === null) {\n      res.send(\n        schema.RequestError(\n          404,\n          \"delete failed: message with provided id does not exist\"\n        )\n      );\n    } else {\n      ref.remove().then(function () {\n        res.send(schema.RequestSuccess(200, \"deleted successfully\"));\n      });\n    }\n  });\n});\n\n// update a specific message's text by its id\nrouter.post(\"/project/:projectId/messages/:messageId/text/\", (req, res) => {\n  const msg = new schema.Message(req.body);\n  const ref = data.database.ref(\n    `messages/${req.params.projectId}/messages/${req.params.messageId}/text/`\n  );\n  ref.set(msg.text).then(function () {\n    res.send(schema.RequestSuccess(200, \"updated successfully\"));\n  });\n});\n\n// WILDCARD ---------------------------------------------------\n\nrouter.get(\"*\", function (req, res) {\n  res.send(schema.RequestError(404, \"Malformed Endpoint\"));\n});\n\n// ------------------------------------------------------------\n\nconsole.log(\"REST API Initialized\");\nmodule.exports = router;\n"],"file":"endpoints.js"}